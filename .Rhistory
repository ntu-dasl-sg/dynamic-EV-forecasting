piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
# Rmd figures: height = 6, width = 8.
# Visualise for Jan 2010 event (Training set 3):
# For 12/2009 event:
eruption_onset_start <- as.POSIXct("2009-12-14 14:40:00", tz = "GMT")
seismic_crisis_start <- as.POSIXct("2009-12-14 13:30:00", tz = "GMT")
seismic_swarm_start <- as.POSIXct("2009-12-14 13:40:00", tz = "GMT")
seismic_swarm_end <- as.POSIXct("2009-12-14 14:12:00", tz = "GMT")
tr_uv05_2 <- slice(tr_uv05,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
piton_env_dB_2 <- slice(piton_env_dB,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-85000, 85000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-85000, 85000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train2_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 100))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train2_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train2_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/test_data/Test_Piton_102010.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
# 1. Highpass 0.01Hz
temp_butter <- signal::butter(n = 2, W = 0.01, type = "high")
highpass_signal <- signal::filter(temp_butter$b, temp_butter$a, tr_uv05_raw@data)
tr_uv05_hp001 <- tr_uv05_raw
tr_uv05_hp001@data <- as.vector(highpass_signal)
# 2. 0.1-20Hz
tr_uv05_0120 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 0.1, high = 20)
# 3. 1-0.1Hz
tr_uv05_011 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 0.1, high = 1)
# 4. 5-15 Hz
tr_uv05_515 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 5, high = 15)
# 5. 1-5 Hz
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
eruption_onset_start <- as.POSIXct("2010-10-14 15:20:00", tz = "GMT")
seismic_crisis_start <- as.POSIXct("2010-10-14 09:45:00", tz = "GMT")
seismic_swarm_start <- as.POSIXct("2010-10-14 10:50:00", tz = "GMT")
seismic_swarm_end <- as.POSIXct("2009-10-14 11:30:00", tz = "GMT")
tr_uv05_2 <- slice(tr_uv05,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
piton_env_dB_2 <- slice(piton_env_dB,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Oct 14", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Oct 14", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-85000, 85000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Oct 14", ylim = c(-85000, 85000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/test_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Oct 14", ylim = c(15, 100))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/training_data/Train_Piton_112009/Train_Piton_112009.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
# 1. Highpass 0.01Hz
temp_butter <- signal::butter(n = 2, W = 0.01, type = "high")
highpass_signal <- signal::filter(temp_butter$b, temp_butter$a, tr_uv05_raw@data)
tr_uv05_hp001 <- tr_uv05_raw
tr_uv05_hp001@data <- as.vector(highpass_signal)
# 5. 1-5 Hz
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
# ======= Choose the frequency band here.
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
# For 11/2009 event:
eruption_onset_start <- as.POSIXct("2009-11-05 17:00:00", tz = "GMT")
seismic_crisis_start <- as.POSIXct("2009-11-05 15:30:00", tz = "GMT")
seismic_swarm_start <- as.POSIXct("2009-11-05 15:40:00", tz = "GMT")
seismic_swarm_end <- as.POSIXct("2009-11-05 16:10:00", tz = "GMT")
tr_uv05_2 <- slice(tr_uv05,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
piton_env_dB_2 <- slice(piton_env_dB,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train1_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-85000, 85000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Nov 05", ylim = c(-85000, 85000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train1_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Nov 05", ylim = c(15, 100))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/training_data/Train_Piton_122009/Train_Piton_122009.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
# 5. 1-5 Hz
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
# For 12/2009 event:
eruption_onset_start <- as.POSIXct("2009-12-14 14:40:00", tz = "GMT")
seismic_crisis_start <- as.POSIXct("2009-12-14 13:30:00", tz = "GMT")
seismic_swarm_start <- as.POSIXct("2009-12-14 13:40:00", tz = "GMT")
seismic_swarm_end <- as.POSIXct("2009-12-14 14:12:00", tz = "GMT")
tr_uv05_2 <- slice(tr_uv05,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
piton_env_dB_2 <- slice(piton_env_dB,  seismic_crisis_start - 5*60, eruption_onset_start + 180*60)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train2_signal.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim = c(-100000, 100000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Dec 14", ylim = c(-100000, 100000))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/train2_envelope.png", width = 1800, height = 1800, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 120))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Dec 14", ylim = c(15, 120))
abline(v=c(seismic_crisis_start, seismic_swarm_start, seismic_swarm_end,
eruption_onset_start), col='blue', lwd=2,
lty = c(3, 2, 2, 1))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/non_events/Nevent_Piton_112009.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
# 1. Highpass 0.01Hz
# 5. 1-5 Hz
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5
)
# ======= Choose the frequency band here.
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_signal.png", width = 1800, height = 900, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
plot(tr_uv05_2, ylab = "Counts", xlab = "Time (UTC) on Jan 02", ylim = c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_envelope.png", width = 1800, height = 900, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
plot(piton_env_dB_2, ylab = "Decibels", xlab = "Time (UTC) on Jan 02", ylim = c(15, 100))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_signal.png", width = 1800, height = 900, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_envelope.png", width = 1800, height = 900, res = 300)
layout(matrix(seq(2)))        # layout a 2x1 matrix
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_signal.png", width = 1800, height = 900, res = 300)
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_envelope.png", width = 1800, height = 900, res = 300)
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/non_events/NEvent_1/Nevent_Piton_112009.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
# 5. 1-5 Hz
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_signal.png", width = 1800, height = 900, res = 300)
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_envelope.png", width = 1800, height = 900, res = 300)
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
dev.off()
# Non-event 1
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_signal.png", width = 1800, height = 900, res = 300)
plot(tr_uv05, ylab = "Counts", xlab = "Time (UTC) on Nov 30", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent1_envelope.png", width = 1800, height = 900, res = 300)
plot(piton_env_dB, ylab = "Decibels", xlab = "Time (UTC) on Nov 30", ylim = c(15, 100))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/non_events/NEvent_2/Nevent_Piton_122009.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
# ======= Choose the frequency band here.
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
# Rmd figures: height = 6, width = 8.
# Visualise for Jan 2010 event (Training set 3):
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent2_signal.png", width = 1800, height = 900, res = 300)
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent2_envelope.png", width = 1800, height = 900, res = 300)
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
dev.off()
temp.time <- proc.time()[3]
# ======= Change filepath accordingly:
uv05_raw <- readMiniseedFile("Y:/non_events/NEvent_3/Nevent_Piton_052010.mseed")
time.taken <- proc.time()[3] - temp.time # 6 minutes.
# Ensure sequence has even length because FFT is very slow on odd length sequences:
if(mod(length(uv05_raw@traces[[1]]), 2) == 1){
# Remove first row:
uv05_raw@traces[[1]]@data <- uv05_raw@traces[[1]]@data[-1]
}
tr_uv05_raw <- uv05_raw@traces[[1]]
# Frequency-filter:
tr_uv05_15 <- IRISSeismic::butterworth(x = tr_uv05_raw, n = 2, low = 1, high = 5)
tr_uv05 <- tr_uv05_15
piton_ddt <- tr_uv05
na_id <- which(is.na(piton_ddt@data))
temp.time <- proc.time()[3]
if(length(na_id)>0){
nonna_id <- which(!is.na(piton_ddt@data))
piton_hilbert <- hilbertFFT(piton_ddt@data[nonna_id])
piton_hilbert_2 <- rep(NA, length(piton_ddt@data))
piton_hilbert_2[nonna_id] <- piton_hilbert
sum(is.na(piton_hilbert_2)) == length(na_id) # Check
piton_hilbert <- piton_hilbert_2
}else{
piton_hilbert <- hilbertFFT(piton_ddt@data)
}
piton_env_data <- Mod(piton_hilbert)
piton_env <- tr_uv05
piton_env@id <- "Envelope"
piton_env@data <- piton_env_data
# Convert to decibel scale:
piton_env_dB <- piton_env
piton_env_dB@data <- 20*log10(piton_env_dB@data)
piton_env_dB@id <- "dB Envelope"
# Check histogram of envelope:
par(mfrow = c(1, 2))
hist(piton_env@data)
hist(piton_env_dB@data)
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent3_signal.png", width = 1800, height = 900, res = 300)
plot(tr_uv05, ylab = "Counts", xlab = "Date", ylim =c(-55000, 55000))
dev.off()
png(file = "D:/Documents/Imperial_NTU_collaboration/Seismic data/Graphics/nonevent3_envelope.png", width = 1800, height = 900, res = 300)
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
dev.off()
plot(piton_env_dB, ylab = "Decibels", xlab = "Date", ylim = c(15, 100))
3456/2
